//-----------------------------------------------
//
//	This file is part of the Siv3D Engine.
//
//	Copyright (c) 2008-2024 Ryo Suzuki
//	Copyright (c) 2016-2024 OpenSiv3D Project
//
//	Licensed under the MIT License.
//
//-----------------------------------------------

# pragma once
# include <Siv3D/DLL.hpp>
# include <Siv3D/MonitorInfo.hpp>
# include <Siv3D/WindowState.hpp>
# include <Siv3D/Windows/ComPtr.hpp>
# include <ShObjIdl_core.h> // ITaskbarList3

namespace s3d::WindowMisc
{
	////////////////////////////////////////////////////////////////
	//
	//	SetDPIAwareness
	//
	////////////////////////////////////////////////////////////////

	void SetDPIAwareness(LibraryHandle user32);

	////////////////////////////////////////////////////////////////
	//
	//	GetMonitors
	//
	////////////////////////////////////////////////////////////////

	Array<MonitorInfo> GetMonitors();

	////////////////////////////////////////////////////////////////
	//
	//	GetScaling
	//
	////////////////////////////////////////////////////////////////

	[[nodiscard]]
	double GetScaling(uint32 dpi) noexcept;

	////////////////////////////////////////////////////////////////
	//
	//	CalculateWindowPos
	//
	////////////////////////////////////////////////////////////////

	[[nodiscard]]
	Point CalculateWindowPos(const MonitorInfo& monitor, const Size& frameBufferSize) noexcept;

	////////////////////////////////////////////////////////////////
	//
	//	GetWindowStyleFlags
	//
	////////////////////////////////////////////////////////////////

	[[nodiscard]]
	uint32 GetWindowStyleFlags(WindowStyle style) noexcept;

	////////////////////////////////////////////////////////////////
	//
	//	AdjustWindowRect
	//
	////////////////////////////////////////////////////////////////

	[[nodiscard]]
	Rect AdjustWindowRect(HWND hWnd, decltype(AdjustWindowRectExForDpi)* pAdjustWindowRectExForDpi,
		int32 dpi, const Point& windowPos, const Size& size, uint32 windowStyleFlags);

	////////////////////////////////////////////////////////////////
	//
	//	CreateMainWindow
	//
	////////////////////////////////////////////////////////////////

	[[nodiscard]]
	HWND CreateMainWindow(HMODULE moduleHandle, const MonitorInfo& monitor,
		const std::wstring& windowClassName, const String& windowName, decltype(AdjustWindowRectExForDpi)* pAdjustWindowRectExForDpi,
		int32& dpi, WindowState& windowState);

	////////////////////////////////////////////////////////////////
	//
	//	DisablePalmRejection
	//
	////////////////////////////////////////////////////////////////

	void DisablePalmRejection(HWND hWND);

	////////////////////////////////////////////////////////////////
	//
	//	DisableTouchFeedbackVisualization
	//
	////////////////////////////////////////////////////////////////

	void DisableTouchFeedbackVisualization(HWND hWND, decltype(SetWindowFeedbackSetting)* pSetWindowFeedbackSetting);

	////////////////////////////////////////////////////////////////
	//
	//	StartDeviceNotification
	//
	////////////////////////////////////////////////////////////////

	[[nodiscard]]
	HDEVNOTIFY StartDeviceNotification(HWND hWnd);

	////////////////////////////////////////////////////////////////
	//
	//	CreateTaskbarList
	//
	////////////////////////////////////////////////////////////////

	[[nodiscard]]
	ComPtr<ITaskbarList3> CreateTaskbarList();

	////////////////////////////////////////////////////////////////
	//
	//	ShowWindow
	//
	////////////////////////////////////////////////////////////////

	void ShowWindow(HWND hWnd);
}
