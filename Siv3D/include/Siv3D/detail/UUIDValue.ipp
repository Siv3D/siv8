//-----------------------------------------------
//
//	This file is part of the Siv3D Engine.
//
//	Copyright (c) 2008-2025 Ryo Suzuki
//	Copyright (c) 2016-2025 OpenSiv3D Project
//
//	Licensed under the MIT License.
//
//-----------------------------------------------

# pragma once

namespace s3d
{		
	////////////////////////////////////////////////////////////////
	//
	//	(constructor)
	//
	////////////////////////////////////////////////////////////////

	constexpr UUIDValue::UUIDValue(const std::array<value_type, 16>& uuid) noexcept
		: m_data{ uuid } {}
		
	////////////////////////////////////////////////////////////////
	//
	//	isNil
	//
	////////////////////////////////////////////////////////////////

	constexpr bool UUIDValue::isNil() const noexcept
	{
		for (auto& value : m_data)
		{
			if (value != 0)
			{
				return false;
			}
		}

		return true;
	}
		
	////////////////////////////////////////////////////////////////
	//
	//	getData
	//
	////////////////////////////////////////////////////////////////

	constexpr const std::array<UUIDValue::value_type, 16>& UUIDValue::getData() const noexcept
	{
		return m_data;
	}
		
	////////////////////////////////////////////////////////////////
	//
	//	swap
	//
	////////////////////////////////////////////////////////////////

	constexpr void UUIDValue::swap(UUIDValue& other)
	{
		m_data.swap(other.m_data);
	}
		
	////////////////////////////////////////////////////////////////
	//
	//	hash
	//
	////////////////////////////////////////////////////////////////

	inline uint64 UUIDValue::hash() const noexcept
	{
		return Hash(m_data);
	}
}
