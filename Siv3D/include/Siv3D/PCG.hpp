//-----------------------------------------------
//
//	This file is part of the Siv3D Engine.
//
//	Copyright (c) 2008-2022 Ryo Suzuki
//	Copyright (c) 2016-2022 OpenSiv3D Project
//
//	Licensed under the MIT License.
//
//-----------------------------------------------

# pragma once
# include <array>
# include <ThirdParty/pcg/pcg_random.hpp>
# include "Types.hpp"

namespace s3d
{
	namespace PRNG
	{
		class PCG64
		{
		public:

			using engine_type	= ::pcg64_oneseq;

			using result_type	= engine_type::result_type;

			using state_type	= std::array<uint64, 2>;

			[[nodiscard]]
			PCG64() noexcept;

			[[nodiscard]]
			explicit PCG64(uint64 seed) noexcept;

			[[nodiscard]]
			explicit PCG64(const state_type& seeds) noexcept;

			void seed(uint64 seed) noexcept;

			void seed(const state_type& seeds) noexcept;

			/// @brief 生成される乱数の最小値を返します。 | Returns the minimum value potentially generated by the random-number engine
			/// @return 生成される乱数の最小値 | The minimum potentially generated value
			[[nodiscard]]
			static constexpr result_type min() noexcept;

			/// @brief 生成される乱数の最大値を返します。 | Returns the maximum value potentially generated by the random-number engine.
			/// @return 生成される乱数の最大値 | The maximum potentially generated value
			[[nodiscard]]
			static constexpr result_type max() noexcept;

			/// @brief 乱数を生成します。 | Generates a pseudo-random value.
			/// @return 生成された乱数 | A generated pseudo-random value
			result_type operator ()() noexcept;

		private:

			engine_type m_rng;
		};
	}
}

# include "detail/PCG.ipp"
