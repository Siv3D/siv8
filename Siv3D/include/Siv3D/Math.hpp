//-----------------------------------------------
//
//	This file is part of the Siv3D Engine.
//
//	Copyright (c) 2008-2024 Ryo Suzuki
//	Copyright (c) 2016-2024 OpenSiv3D Project
//
//	Licensed under the MIT License.
//
//-----------------------------------------------

# pragma once
# include <cmath>
# include <numeric>
# include "Common.hpp"
# include "BigInt.hpp"
# include "BigFloat.hpp"
# include "PointVector.hpp"
# include "detail/Math_impl.ipp"

namespace s3d
{
	namespace Math
	{
		//////////////////////////////////////////////////
		//
		//	Fmod
		//
		//////////////////////////////////////////////////

		inline constexpr auto Fmod = detail::Fmod_impl{};

		//////////////////////////////////////////////////
		//
		//	Fraction
		//
		//////////////////////////////////////////////////

		inline constexpr auto Fraction = detail::Fraction_impl{};

		//////////////////////////////////////////////////
		//
		//	Frexp
		//
		//////////////////////////////////////////////////

		inline constexpr auto Frexp = detail::Frexp_impl{};

		//////////////////////////////////////////////////
		//
		//	Ldexp
		//
		//////////////////////////////////////////////////

		inline constexpr auto Ldexp = detail::Ldexp_impl{};

		//////////////////////////////////////////////////
		//
		//	Log
		//
		//////////////////////////////////////////////////

		inline constexpr auto Log = detail::Log_impl{};

		//////////////////////////////////////////////////
		//
		//	Log2
		//
		//////////////////////////////////////////////////

		inline constexpr auto Log2 = detail::Log2_impl{};

		//////////////////////////////////////////////////
		//
		//	Log10
		//
		//////////////////////////////////////////////////

		inline constexpr auto Log10 = detail::Log10_impl{};

		//////////////////////////////////////////////////
		//
		//	Modf
		//
		//////////////////////////////////////////////////

		inline constexpr auto Modf = detail::Modf_impl{};

		//////////////////////////////////////////////////
		//
		//	Pow
		//
		//////////////////////////////////////////////////

		inline constexpr auto Pow = detail::Pow_impl{};

		//////////////////////////////////////////////////
		//
		//	Sign
		//
		//////////////////////////////////////////////////

		inline constexpr auto Sign = detail::Sign_impl{};

		//////////////////////////////////////////////////
		//
		//	ToRadians
		//
		//////////////////////////////////////////////////

		/// @brief 角度をラジアンに変換します。
		inline constexpr auto ToRadians = detail::ToRadians_impl{};

		//////////////////////////////////////////////////
		//
		//	ToDegrees
		//
		//////////////////////////////////////////////////

		/// @brief ラジアンを角度に変換します。
		inline constexpr auto ToDegrees = detail::ToDegrees_impl{};

		//////////////////////////////////////////////////
		//
		//	Abs
		//
		//////////////////////////////////////////////////

		/// @brief 絶対値を返します。
		inline constexpr auto Abs = detail::Abs_impl{};

		//////////////////////////////////////////////////
		//
		//	AbsDiff
		//
		//////////////////////////////////////////////////

		/// @brief 差の絶対値を返します。
		inline constexpr auto AbsDiff = detail::AbsDiff_impl{};

		//////////////////////////////////////////////////
		//
		//	Square
		//
		//////////////////////////////////////////////////

		/// @brief 二乗を返します。
		inline constexpr auto Square = detail::Square_impl{};

		//////////////////////////////////////////////////
		//
		//	Exp
		//
		//////////////////////////////////////////////////

		inline constexpr auto Exp = detail::Exp_impl{};

		//////////////////////////////////////////////////
		//
		//	Exp2
		//
		//////////////////////////////////////////////////

		inline constexpr auto Exp2 = detail::Exp2_impl{};

		//////////////////////////////////////////////////
		//
		//	Rsqrt
		//
		//////////////////////////////////////////////////

		/// @brief 逆平方根を返します。
		inline constexpr auto Rsqrt = detail::Rsqrt_impl{};

		//////////////////////////////////////////////////
		//
		//	Sqrt
		//
		//////////////////////////////////////////////////

		/// @brief 平方根を返します。
		inline constexpr auto Sqrt = detail::Sqrt_impl{};

		//////////////////////////////////////////////////
		//
		//	Ceil
		//
		//////////////////////////////////////////////////

		inline constexpr auto Ceil = detail::Ceil_impl{};

		//////////////////////////////////////////////////
		//
		//	Floor
		//
		//////////////////////////////////////////////////

		inline constexpr auto Floor = detail::Floor_impl{};

		//////////////////////////////////////////////////
		//
		//	Round
		//
		//////////////////////////////////////////////////

		/// @brief 四捨五入した値を返します。
		inline constexpr auto Round = detail::Round_impl{};

		//////////////////////////////////////////////////
		//
		//	Trunc
		//
		//////////////////////////////////////////////////

		inline constexpr auto Trunc = detail::Trunc_impl{};

		//////////////////////////////////////////////////
		//
		//	Max
		//
		//////////////////////////////////////////////////

		inline constexpr auto Max = detail::Max_impl{};

		//////////////////////////////////////////////////
		//
		//	Min
		//
		//////////////////////////////////////////////////

		inline constexpr auto Min = detail::Min_impl{};

		//////////////////////////////////////////////////
		//
		//	Clamp
		//
		//////////////////////////////////////////////////

		/// @brief 値を範囲内にクランプします。
		inline constexpr auto Clamp = detail::Clamp_impl{};

		//////////////////////////////////////////////////
		//
		//	Saturate
		//
		//////////////////////////////////////////////////

		/// @brief 値を [0, 1] の範囲にクランプします。
		inline constexpr auto Saturate = detail::Saturate_impl{};

		//////////////////////////////////////////////////
		//
		//	Acos
		//
		//////////////////////////////////////////////////

		inline constexpr auto Acos = detail::Acos_impl{};

		//////////////////////////////////////////////////
		//
		//	Asin
		//
		//////////////////////////////////////////////////

		inline constexpr auto Asin = detail::Asin_impl{};

		//////////////////////////////////////////////////
		//
		//	Atan
		//
		//////////////////////////////////////////////////

		inline constexpr auto Atan = detail::Atan_impl{};

		//////////////////////////////////////////////////
		//
		//	Atan2
		//
		//////////////////////////////////////////////////

		inline constexpr auto Atan2 = detail::Atan2_impl{};

		//////////////////////////////////////////////////
		//
		//	Cos
		//
		//////////////////////////////////////////////////

		inline constexpr auto Cos = detail::Cos_impl{};

		//////////////////////////////////////////////////
		//
		//	Cosh
		//
		//////////////////////////////////////////////////

		inline constexpr auto Cosh = detail::Cosh_impl{};

		//////////////////////////////////////////////////
		//
		//	Sin
		//
		//////////////////////////////////////////////////

		inline constexpr auto Sin = detail::Sin_impl{};

		//////////////////////////////////////////////////
		//
		//	Sinh
		//
		//////////////////////////////////////////////////

		inline constexpr auto Sinh = detail::Sinh_impl{};

		//////////////////////////////////////////////////
		//
		//	Tan
		//
		//////////////////////////////////////////////////

		inline constexpr auto Tan = detail::Tan_impl{};

		//////////////////////////////////////////////////
		//
		//	Tanh
		//
		//////////////////////////////////////////////////

		inline constexpr auto Tanh = detail::Tanh_impl{};

		//////////////////////////////////////////////////
		//
		//	Dot
		//
		//////////////////////////////////////////////////

		inline constexpr auto Dot = detail::Dot_impl{};

		//////////////////////////////////////////////////
		//
		//	Cross
		//
		//////////////////////////////////////////////////

		inline constexpr auto Cross = detail::Cross_impl{};

		//////////////////////////////////////////////////
		//
		//	Normalize
		//
		//////////////////////////////////////////////////

		inline constexpr auto Normalize = detail::Normalize_impl{};

		//////////////////////////////////////////////////
		//
		//	Smoothstep
		//
		//////////////////////////////////////////////////

		inline constexpr auto Smoothstep = detail::Smoothstep_impl{};

		//////////////////////////////////////////////////
		//
		//	ClampAngle
		//
		//////////////////////////////////////////////////

		inline constexpr auto ClampAngle = detail::ClampAngle_impl{};

		//////////////////////////////////////////////////
		//
		//	NormalizeAngle
		//
		//////////////////////////////////////////////////

		inline constexpr auto NormalizeAngle = detail::NormalizeAngle_impl{};

		//////////////////////////////////////////////////
		//
		//	GCD
		//
		//////////////////////////////////////////////////

		inline constexpr auto GCD = detail::GCD_impl{};

		//////////////////////////////////////////////////
		//
		//	LCM
		//
		//////////////////////////////////////////////////

		inline constexpr auto LCM = detail::LCM_impl{};
	}
}
